{"version":3,"file":"js/admin-settings.js","mappings":"CAAA,SAAWA,EAAQC,EAAUC,GAEzBA,GAAE,WACE,IAAIC,EAAW,SAAUC,EAAWC,GAChC,IAAIC,EAAiBD,EAAKE,KAAK,+BAC3BC,EAAcH,EAAKE,KAAK,4BACJD,EAAeG,IAAID,GAEzBE,MAAK,WACrBR,EAAES,MAAMC,KAAK,WAAY,WAC3B,IACAP,EAAKE,KAAM,YAAWH,MAAcM,MAAK,WACvCR,EAAES,MAAME,WAAW,WACrB,GACJ,EAEIC,EAAsB,SAAUC,GAChC,OAAOA,EACL,mBACA,qBACN,EAEIC,EAAYd,EAAE,4CACde,EAAQD,EAAUE,QAAQ,QAE9BF,EAAUG,GAAG,UAAU,WACnB,IAAIJ,EAAWJ,KAAKS,QAChBH,EAAQf,EAAES,MAAMO,QAAQ,QAE5Bf,EAASW,EAAoBC,GAAWE,EAC5C,IAEAd,EAASW,EAAoBE,EAAUK,KAAK,YAAaJ,GAE3D,MAAMK,EAAeA,IAAMC,QAAQC,aAAaC,KAAKH,cAIrDrB,EAASyB,iBAAiB,qBAAqBC,SAASC,IACtD5B,EAAO6B,GAAGC,WAAWC,WAAWH,EAAM,IAMxC3B,EAASyB,iBAAiB,uBAAuBC,SAASK,IACxDA,EAAOC,iBAAiB,SAAUC,IACfjC,EAASkC,cAAcH,EAAOI,QAAQC,QAC5CC,cAAc,IAAIC,YAAY,QAAS,CAAEC,OAAQR,EAAOI,QAAQK,WAC3EP,EAAMQ,gBAAgB,GACtB,IAKJzC,EAASyB,iBAAiB,mBAAmBC,SAASC,IACpDA,EAAMK,iBAAiB,SAAUU,IAC3BrB,MAGJM,EAAMgB,MAAQD,EAAEH,OAAM,GACtB,IAKJvC,EAASyB,iBAAiB,sBAAsBC,SAASC,IACvDA,EAAMK,iBAAiB,SAAUU,IAC3BrB,MAGJM,EAAMiB,UAAYF,EAAEH,OAOpBtC,EAAE0B,GAAOkB,KAAK,eAAe,GAAGC,WAAWC,SAASpB,EAAMgB,OAC1D1C,EAAE0B,GAAOkB,KAAK,eAAe,GAAGC,WAAWE,UAAS,GACpD,GAEN,GACH,CAnFD,CAmFGC,IAAKjD,SAAUkD","sources":["webpack://payoneer-payment-gateway/./resources/js/admin-settings.js"],"sourcesContent":["(function (window, document, $) {\n\n    $(function () {\n        let showOnly = function (groupName, form) {\n            let $sandboxFields = form.find('[group=sandbox_credentials]')\n            let $liveFields = form.find('[group=live_credentials]')\n            let $allGroupedFields = $sandboxFields.add($liveFields)\n\n            $allGroupedFields.each(function (){\n              $(this).attr('readonly', 'readonly')\n            })\n            form.find(`[group = ${groupName}]`).each(function (){\n              $(this).removeAttr('readonly')\n            })\n        }\n\n        let getCurrentGroupName = function (liveMode) {\n            return liveMode\n            ? 'live_credentials'\n            : 'sandbox_credentials';\n        }\n\n        let $checkbox = $('#woocommerce_payoneer-checkout_live_mode')\n        let $form = $checkbox.closest('form')\n\n        $checkbox.on('change', function () {\n            let liveMode = this.checked\n            let $form = $(this).closest('form')\n\n            showOnly(getCurrentGroupName(liveMode), $form)\n        })\n\n        showOnly(getCurrentGroupName($checkbox.prop('checked')), $form)\n\n      const confirmReset = () => confirm(PayoneerData.i18n.confirmReset)\n      /**\n       * Initialize CodeMirror editor\n       */\n      document.querySelectorAll('textarea.code.css').forEach((input) => {\n        window.wp.codeEditor.initialize(input);\n      })\n\n      /**\n       * Initialize reset buttons\n       */\n      document.querySelectorAll('button[data-target]').forEach((button) => {\n        button.addEventListener('click', (event)=>{\n          const inputField=document.querySelector(button.dataset.target);\n          inputField.dispatchEvent(new CustomEvent('reset', { detail: button.dataset.default }))\n          event.preventDefault();\n        });\n      })\n      /**\n       * Generic reset logic for input fields\n       */\n      document.querySelectorAll('#mainform input').forEach((input) => {\n        input.addEventListener('reset', (e) => {\n          if(!confirmReset()){\n            return;\n          }\n          input.value = e.detail\n        })\n      })\n      /**\n       * Generic reset logic for textarea fields\n       */\n      document.querySelectorAll('#mainform textarea').forEach((input) => {\n        input.addEventListener('reset', (e) => {\n          if(!confirmReset()){\n            return;\n          }\n          input.innerHTML = e.detail\n\n          /**\n           * This is ugly because it technically does not belong here.\n           * For now, ONLY CSS fields have reset capabilities to begin with, so it's okay.\n           * But later, this should be moved to a place where it executes in a smarter fashion\n           */\n          $(input).next('.CodeMirror')[0].CodeMirror.setValue(input.value)\n          $(input).next('.CodeMirror')[0].CodeMirror.refresh()\n        })\n      })\n    })\n})(top, document, jQuery);\n"],"names":["window","document","$","showOnly","groupName","form","$sandboxFields","find","$liveFields","add","each","this","attr","removeAttr","getCurrentGroupName","liveMode","$checkbox","$form","closest","on","checked","prop","confirmReset","confirm","PayoneerData","i18n","querySelectorAll","forEach","input","wp","codeEditor","initialize","button","addEventListener","event","querySelector","dataset","target","dispatchEvent","CustomEvent","detail","default","preventDefault","e","value","innerHTML","next","CodeMirror","setValue","refresh","top","jQuery"],"sourceRoot":""}